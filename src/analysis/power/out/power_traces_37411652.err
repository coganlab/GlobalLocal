[NbConvertApp] Converting notebook /hpc/group/coganlab/etb28/GlobalLocal/src/analysis/power/power_traces.ipynb to notebook
Traceback (most recent call last):
  File "/hpc/home/etb28/miniconda3/envs/ieeg/bin/jupyter-nbconvert", line 10, in <module>
    sys.exit(main())
             ^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/jupyter_core/application.py", line 280, in launch_instance
    super().launch_instance(argv=argv, **kwargs)
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/traitlets/config/application.py", line 992, in launch_instance
    app.start()
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 412, in start
    self.convert_notebooks()
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 590, in convert_notebooks
    self.convert_single_notebook(notebook_filename)
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 556, in convert_single_notebook
    output, resources = self.export_single_notebook(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/nbconvertapp.py", line 479, in export_single_notebook
    output, resources = self.exporter.from_filename(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 203, in from_filename
    return self.from_file(f, resources=resources, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 222, in from_file
    return self.from_notebook_node(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/exporters/notebook.py", line 36, in from_notebook_node
    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 156, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/exporters/exporter.py", line 354, in _preprocess
    nbc, resc = preprocessor(nbc, resc)  # type:ignore[operator]
                ^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/preprocessors/base.py", line 48, in __call__
    return self.preprocess(nb, resources)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/preprocessors/execute.py", line 102, in preprocess
    self.preprocess_cell(cell, resources, index)
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbconvert/preprocessors/execute.py", line 123, in preprocess_cell
    cell = self.execute_cell(cell, index, store_history=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/hpc/home/etb28/miniconda3/envs/ieeg/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
save_dir = os.path.join(save_dir_root, epochs_root_file)

evks_dict_sig_elecs = make_multi_channel_evokeds_for_all_conditions_and_rois(
    subjects_mne_objects, subjects, rois, condition_names, 
    sig_electrodes_per_subject_roi
) 

evks_dict_all_elecs = make_multi_channel_evokeds_for_all_conditions_and_rois(
    subjects_mne_objects, subjects, rois, condition_names, 
    all_electrodes_per_subject_roi
)

plot_power_traces_for_all_rois(
    evks_dict_all_elecs, rois, condition_names, conditions_save_name, plot_params,
    save_dir=save_dir,
    error_type='sem', figsize=(12, 8), 
    x_label='Time from Stimulus Onset (s)', 
    y_label='Power (z)',
    axis_font_size=35, tick_font_size=24, title_font_size=40, save_name_suffix='all_elecs'
)

plot_power_traces_for_all_rois(
    evks_dict_sig_elecs, rois, condition_names, conditions_save_name, plot_params,
    save_dir=save_dir,
    error_type='sem', figsize=(12, 8), 
    x_label='Time from Stimulus Onset (s)', 
    y_label='Power (z)',axis_font_size=35, tick_font_size=24,
    title_font_size=40, save_name_suffix='sig_elecs'
)
------------------

----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
----- stdout -----
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[17], line 3[0m
[1;32m      1[0m save_dir [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mjoin(save_dir_root, epochs_root_file)
[0;32m----> 3[0m evks_dict_sig_elecs [38;5;241m=[39m make_multi_channel_evokeds_for_all_conditions_and_rois(
[1;32m      4[0m     subjects_mne_objects, subjects, rois, condition_names, 
[1;32m      5[0m     sig_electrodes_per_subject_roi
[1;32m      6[0m ) 
[1;32m      8[0m evks_dict_all_elecs [38;5;241m=[39m make_multi_channel_evokeds_for_all_conditions_and_rois(
[1;32m      9[0m     subjects_mne_objects, subjects, rois, condition_names, 
[1;32m     10[0m     all_electrodes_per_subject_roi
[1;32m     11[0m )
[1;32m     13[0m plot_power_traces_for_all_rois(
[1;32m     14[0m     evks_dict_all_elecs, rois, condition_names, conditions_save_name, plot_params,
[1;32m     15[0m     save_dir[38;5;241m=[39msave_dir,
[0;32m   (...)[0m
[1;32m     19[0m     axis_font_size[38;5;241m=[39m[38;5;241m35[39m, tick_font_size[38;5;241m=[39m[38;5;241m24[39m, title_font_size[38;5;241m=[39m[38;5;241m40[39m, save_name_suffix[38;5;241m=[39m[38;5;124m'[39m[38;5;124mall_elecs[39m[38;5;124m'[39m
[1;32m     20[0m )

File [0;32m/hpc/group/coganlab/etb28/GlobalLocal/src/analysis/power/power_traces.py:266[0m, in [0;36mmake_multi_channel_evokeds_for_all_conditions_and_rois[0;34m(subjects_mne_objects, subjects, rois, condition_names, electrodes_per_subject_roi, mne_object_type)[0m
[1;32m    242[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    243[0m [38;5;124;03mCreate multi-channel evoked objects for all conditions and ROIs by combining single-channel evokeds.[39;00m
[1;32m    244[0m [38;5;124;03m[39;00m
[0;32m   (...)[0m
[1;32m    263[0m [38;5;124;03m    Nested dictionary: condition_name -> roi -> multi-channel evoked object[39;00m
[1;32m    264[0m [38;5;124;03m"""[39;00m
[1;32m    265[0m [38;5;66;03m# First get all single-channel evokeds[39;00m
[0;32m--> 266[0m evks_dict_single_elecs [38;5;241m=[39m make_evoked_electrode_lists_for_all_conditions_and_rois(
[1;32m    267[0m     subjects_mne_objects, subjects, rois, condition_names, 
[1;32m    268[0m     electrodes_per_subject_roi, mne_object_type
[1;32m    269[0m )
[1;32m    271[0m [38;5;66;03m# Now combine them into multi-channel evokeds[39;00m
[1;32m    272[0m evks_dict_multi_elecs [38;5;241m=[39m {}

File [0;32m/hpc/group/coganlab/etb28/GlobalLocal/src/analysis/power/power_traces.py:233[0m, in [0;36mmake_evoked_electrode_lists_for_all_conditions_and_rois[0;34m(subjects_mne_objects, subjects, rois, condition_names, electrodes_per_subject_roi, mne_object_type)[0m
[1;32m    231[0m out [38;5;241m=[39m {}
[1;32m    232[0m [38;5;28;01mfor[39;00m condition_name [38;5;129;01min[39;00m condition_names:
[0;32m--> 233[0m     out[condition_name] [38;5;241m=[39m make_evoked_electrode_lists_for_rois(
[1;32m    234[0m         subjects_mne_objects, subjects, rois,
[1;32m    235[0m         electrodes_per_subject_roi, condition_name, mne_object_type
[1;32m    236[0m     )
[1;32m    237[0m [38;5;28;01mreturn[39;00m out

File [0;32m/hpc/group/coganlab/etb28/GlobalLocal/src/analysis/power/power_traces.py:198[0m, in [0;36mmake_evoked_electrode_lists_for_rois[0;34m(subjects_mne_objects, subjects, rois, electrodes_per_subject_roi, condition_name, mne_object_type)[0m
[1;32m    196[0m out [38;5;241m=[39m {}
[1;32m    197[0m [38;5;28;01mfor[39;00m roi [38;5;129;01min[39;00m rois:
[0;32m--> 198[0m     evokeds [38;5;241m=[39m create_list_of_single_channel_evokeds_across_subjects_for_roi_and_condition(
[1;32m    199[0m         subjects_mne_objects, subjects, roi, electrodes_per_subject_roi, 
[1;32m    200[0m         condition_name, mne_object_type
[1;32m    201[0m     )
[1;32m    202[0m     out[roi] [38;5;241m=[39m evokeds
[1;32m    203[0m [38;5;28;01mreturn[39;00m out

File [0;32m/hpc/group/coganlab/etb28/GlobalLocal/src/analysis/power/power_traces.py:156[0m, in [0;36mcreate_list_of_single_channel_evokeds_across_subjects_for_roi_and_condition[0;34m(subjects_mne_objects, subjects, roi, electrodes_per_subject_roi, condition_name, mne_object_type)[0m
[1;32m    152[0m all_evokeds_electrodes [38;5;241m=[39m []
[1;32m    154[0m [38;5;28;01mfor[39;00m sub [38;5;129;01min[39;00m subjects:
[1;32m    155[0m     [38;5;66;03m# Get the trial-averaged evoked for this subject and condition[39;00m
[0;32m--> 156[0m     evoked [38;5;241m=[39m get_evoked_for_specific_subject_and_condition(subjects_mne_objects, sub, condition_name, mne_object_type)
[1;32m    158[0m     [38;5;66;03m# Get electrode lists for this subject and ROI[39;00m
[1;32m    159[0m     electrodes [38;5;241m=[39m get_subject_electrodes_for_roi(sub, roi, electrodes_per_subject_roi)

File [0;32m/hpc/group/coganlab/etb28/GlobalLocal/src/analysis/power/power_traces.py:96[0m, in [0;36mget_evoked_for_specific_subject_and_condition[0;34m(subjects_mne_objects, subject, condition_name, mne_object_type)[0m
[1;32m     75[0m [38;5;28;01mdef[39;00m [38;5;21mget_evoked_for_specific_subject_and_condition[39m(subjects_mne_objects, subject, condition_name, 
[1;32m     76[0m                       mne_object_type[38;5;241m=[39m[38;5;124m'[39m[38;5;124mHG_ev1_power_rescaled[39m[38;5;124m'[39m):
[1;32m     77[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m     78[0m [38;5;124;03m    Get the trial-averaged evoked object for a specific subject and condition.[39;00m
[1;32m     79[0m [38;5;124;03m    [39;00m
[0;32m   (...)[0m
[1;32m     94[0m [38;5;124;03m        Evoked object for the subject and condition[39;00m
[1;32m     95[0m [38;5;124;03m    """[39;00m
[0;32m---> 96[0m     [38;5;28;01mreturn[39;00m subjects_mne_objects[subject][condition_name][mne_object_type [38;5;241m+[39m [38;5;124m"[39m[38;5;124m_avg[39m[38;5;124m"[39m][38;5;241m.[39mcopy()

[0;31mKeyError[0m: 'D0116'

